what is NgRx?
- It is an angular specific state management solution, that allow us to create the client side database with our data
- It allow us to minimize number of http request to server
- It allow us to easily render new version of data in different parts of our view
- Imporves user experience with minimal loading indicator

Install NgRx
- ng add @ngrx/store
- It updates app.module.ts import section with "StoreModule.forRoot(reducers, {metaReducers})"

- ng add @ngrx/store-devtools  - It is a browser extension tool that allow us to see the content of our in-memory database in chrome dev tools
- It updates app.module.ts import section with "StoreDevtoolsModule.instrument({maxAge: 25, logOnly: environment.production})"
- Install redux dev tool extension in chrome


- ngRx Schematic commands
  - ng generate store auth/Auth --module auth.module.ts   => this add some store configuration to auth.module.ts



- Store Service API - It allow us to communicate with in-memory database

- Action(NgRx key):  Action is a plain javascript object which we send to "Store" in order to trigger modification.
   - Its more often an event reporting something happened at component level
   - Action always has a type and payload but not manadatory.
   - dispatching of action is the only way to modifiy the stored state 

        eg: this.store.dispatch({
            type: "Login Action",
            payload: { 
                user //*** or user: user
            }  
        })

        better way to write action is to create separate action file (eg: auth.action.ts)
        
        export const login = createAction(
            "[Login Page] User Login", //*** [Login Page] is source of action from where it is triggered  and second part "User Login" is event which occured with this action.
            props<{user: User}>()  //*** props is function from "Store" which do not take any argument but only payload
            );

        so above eg: modifies to 
        thos.store.dispatch(login({user})) /**** {user} is payload ***/